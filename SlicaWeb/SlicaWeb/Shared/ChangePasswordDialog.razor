@using SlicaWeb.Models
@using Newtonsoft.Json;
@inject CookieManagement CookieManager
@inject ISnackbar Snackbar

<MudDialog>

    <DialogContent>
        <MudDivider Style="margin-top:-1rem;"/>
        <MudItem>
            <div class="row">
                <div class="col-12">
                    <EditForm Model="changePasswordModel">
                        <DataAnnotationsValidator />
                        <div class="row">
                            <div class="col-md-12 col-lg-12 col-sm-12 col-xl-12">

                                <MudItem Class="pa-4">
                                    <MudTextField Class="green-border" For="@(() => changePasswordModel.OldPassword)" @bind-Value="@changePasswordModel.OldPassword" Label="Old Password" InputType="InputType.Password" />
                                </MudItem>
                            </div>
                            <div class="col-md-12 col-lg-12 col-sm-12 col-xl-12">

                                <MudItem Class="pa-4">
                                    <MudTextField  Class="black-border" For="@(() => changePasswordModel.Password)" @bind-Value="@changePasswordModel.Password" Label="New Password" InputType="InputType.Password" />
                                </MudItem>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 col-lg-12 col-sm-12 col-xl-12">

                                <MudItem Class="pa-4">
                                    <MudTextField Class="black-border" For="@(() => changePasswordModel.ConfirmPassword)" @bind-Value="@changePasswordModel.ConfirmPassword" Label="Confirm Password" InputType="InputType.Password" />
                                </MudItem>
                            </div>
                        </div>
                    </EditForm>
                </div>

            </div>
        </MudItem>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit"> Confirm</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    UserModel changePasswordModel = new UserModel();

    async Task Submit()
    {
        try
        {
            var sessionModel = await CookieManager.GetCookie<UserModel>("LoggedInUserInfo");

            List<string> validateParams = new List<string>
                {
                  "ConfirmPassword","Password","OldPassword"
                };
            if (!CommonMethods.ValidateAttributes(changePasswordModel, validateParams))
            {
                return;
            }

            var requestBody = JsonConvert.SerializeObject(new
            {
                OldPassword = changePasswordModel.OldPassword,
                Password = changePasswordModel.Password,
                UserID = sessionModel.Id,
            });

            var jsonStr = await CommonMethods.PostDataAsync(requestBody.ToString(), sessionModel.APIKey, sessionModel.SessionKey, "/ACC/ChangePassword");
            dynamic result = JsonConvert.DeserializeObject(jsonStr);
            int returnStatus = result["status"];
            string returnMessage = result["message"];
            if (returnStatus == 200)
            {
                Snackbar.Add(returnMessage, Severity.Success);
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                Snackbar.Add(returnMessage,Severity.Error);
                MudDialog.Close(DialogResult.Ok(true));
            }

        }
        catch (Exception e)
        {
            await CommonMethods.LogExceptionAsync(e, new UserModel());
        }
    }
    void Cancel() => MudDialog.Cancel();
}